#! /bin/bash
# Rolf Niepraschk (Rolf.Niepraschk@ptb.de), 2020-04-30

# Verteilt relayServer-Dateien zu ausgewählten Rechnern per "rsync" und
# aktiviert den relayServer-Prozess dort.

# Aufruf:
#
# ./replicateRelayServer
# oder
if false; then
./replicateRelayServer "a73434 a73435 a75436 e73461 e73462 \
  e75455 e75457 e75458 e75459 e75466 e75467 e75470 i75419 \
  i75420 i75415 i75434 i75436 i75464"    
fi

R_PATH=/usr/local/share/relayServer  # Pfad zu relayServer-Installation 

# $1=server, $2=source dir
function doIt {
  echo "Begin: ************** $1 **************"
  echo "From: \"$2\" To: \"$R_PATH\""
  # »-L« – Behandle Symlinks auf dem Quellsystem wie Verzeichnisse.  
  # »--keep-dirlinks« – Behandle Symlinks auf dem Zielsystem wie Verzeichnisse.
  rsync --info=STATS1 -azL --delete --keep-dirlinks \
    --exclude '.git'  \
    --exclude 'docs'  \
    --exclude 'tmp'   \
    --exclude 'NOTIZEN' \
    "$2" root@$1:$(dirname $R_PATH)/
  # Auf dem Zielsystem Nacharbeiten durchführen  
  ssh root@$1 ${R_PATH}/install
  echo "End:   ************** $1 **************"
}

# Alle Rechner müssen/sollten ohne Passwortabfrage per ssh erreichbar sein!
if [[ $1 ]]; then
  server="$1"
else
  server="localhost"
fi

for i in $server; do
  if [[ $i == 'localhost' || $i == '127.0.0.1' ]]; then
    x=$(realpath -P "$PWD") ; y=$(realpath -P "$R_PATH") 
    # Korrekte Quelle testen und Überschreiben von $PWD verhindern.
    if [[ $(basename $PWD) == "relayServer" && "$x" != "$y" ]]; then
       source="$PWD"
    else
       echo "Fehler: Du musst Dich in einem relayServer-Verzeichnis befinden,"
       echo "        aber nicht in \"$R_PATH\" (ggf. Symlink weg)!"
       exit 1
    fi
  else
    source="$R_PATH"
  fi
  doIt $i "$source"
done

exit

  server="a73434 a73435 a75436 e73461 e73462 e75455 e75457 e75458 \
    e75459 e75466 e75467 e75470 i75419 i75420 i75422 i75434 i75436"
# 
  server="a73434 a73435 a75436 e75459 e75466 i75422 i75436"
  
  
